/* tslint:disable */
/* eslint-disable */
/**
 * Iron Plans API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface PatchedSubscriptionRequest
 */
export interface PatchedSubscriptionRequest {
    /**
     * 
     * @type {string}
     * @memberof PatchedSubscriptionRequest
     */
    planId?: string;
    /**
     * 
     * @type {string}
     * @memberof PatchedSubscriptionRequest
     */
    teamId?: string;
    /**
     * 
     * @type {boolean}
     * @memberof PatchedSubscriptionRequest
     */
    isPaused?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof PatchedSubscriptionRequest
     */
    isActive?: boolean;
}

export function PatchedSubscriptionRequestFromJSON(json: any): PatchedSubscriptionRequest {
    return PatchedSubscriptionRequestFromJSONTyped(json, false);
}

export function PatchedSubscriptionRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): PatchedSubscriptionRequest {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'planId': !exists(json, 'plan_id') ? undefined : json['plan_id'],
        'teamId': !exists(json, 'team_id') ? undefined : json['team_id'],
        'isPaused': !exists(json, 'is_paused') ? undefined : json['is_paused'],
        'isActive': !exists(json, 'is_active') ? undefined : json['is_active'],
    };
}

export function PatchedSubscriptionRequestToJSON(value?: PatchedSubscriptionRequest | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'plan_id': value.planId,
        'team_id': value.teamId,
        'is_paused': value.isPaused,
        'is_active': value.isActive,
    };
}


