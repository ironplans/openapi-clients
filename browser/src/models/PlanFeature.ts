/* tslint:disable */
/* eslint-disable */
/**
 * Iron Plans API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    Feature,
    FeatureFromJSON,
    FeatureFromJSONTyped,
    FeatureToJSON,
    FeatureSpec,
    FeatureSpecFromJSON,
    FeatureSpecFromJSONTyped,
    FeatureSpecToJSON,
} from './';

/**
 * 
 * @export
 * @interface PlanFeature
 */
export interface PlanFeature {
    /**
     * 
     * @type {string}
     * @memberof PlanFeature
     */
    readonly id: string;
    /**
     * 
     * @type {Feature}
     * @memberof PlanFeature
     */
    readonly feature: Feature;
    /**
     * 
     * @type {FeatureSpec}
     * @memberof PlanFeature
     */
    readonly spec: FeatureSpec;
    /**
     * 
     * @type {string}
     * @memberof PlanFeature
     */
    readonly display: string;
    /**
     * 
     * @type {string}
     * @memberof PlanFeature
     */
    readonly slug: string;
    /**
     * 
     * @type {number}
     * @memberof PlanFeature
     */
    readonly maxLimit: number;
}

export function PlanFeatureFromJSON(json: any): PlanFeature {
    return PlanFeatureFromJSONTyped(json, false);
}

export function PlanFeatureFromJSONTyped(json: any, ignoreDiscriminator: boolean): PlanFeature {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': json['id'],
        'feature': FeatureFromJSON(json['feature']),
        'spec': FeatureSpecFromJSON(json['spec']),
        'display': json['display'],
        'slug': json['slug'],
        'maxLimit': json['max_limit'],
    };
}

export function PlanFeatureToJSON(value?: PlanFeature | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
    };
}


